'From Pharo4.0 of 18 March 2013 [Latest update: #40614] on 18 June 2015 at 9:24:43.450367 am'!Unidad subclass: #ProductoDeUnidades	instanceVariableNames: 'factores'	classVariableNames: ''	poolDictionaries: ''	category: 'PLP-TP-2015C1'!!ProductoDeUnidades commentStamp: 'EmilianoMancuso 6/18/2015 09:22' prior: 0!ProductoDeUnidades docs.!!ProductoDeUnidades methodsFor: 'operators' stamp: 'EmilianoMancuso 6/17/2015 02:23'!/ aUnit 	^ aUnit dividiendoProducto: self.! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/17/2015 02:19'!= otraUnidad	"Son iguales si tienen los mismos factores"		^ self class = otraUnidad class ifTrue: [ ^ factores asBag = (otraUnidad factores) asBag ].! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/14/2015 22:39'!* unaUnidad 	^ unaUnidad productoProducto: self.! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/18/2015 02:29'!dividiendoEscalar: anUnidadEscalar 	^ DivisionDeUnidades de: (Array empty) sobre: factores! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/17/2015 02:17'!dividiendoProducto: aProdUnit 	^ DivisionDeUnidades de: aProdUnit factores sobre: factores.! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/17/2015 02:36'!productoDivision: aDivisionDeUnidades 	^ aDivisionDeUnidades productoProducto: self.! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/18/2015 09:06'!contiene: aUnit 	^ aUnit contenidoEnProducto: self.! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/18/2015 09:11'!contenidoEnProducto: aProdUnit 	| checkInclusion |	checkInclusion := [ :smallBag :bigBag |		smallBag doWithOccurrences: [ :e :r |			r <= (bigBag occurrencesOf: e) ifFalse: [ ^ false ].		].	].		checkInclusion value: factores asBag value: (aProdUnit factores asBag).		^ true.! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/14/2015 22:38'!productoProducto: aProductoDeUnidades 	^ ProductoDeUnidades de: ( factores, aProductoDeUnidades factores ).! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/16/2015 04:47'!dividiendoDivision: aDivUnit 	^ DivisionDeUnidades de: aDivUnit numerador sobre: (aDivUnit denominador, factores). ! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/18/2015 09:10'!contenidoEnDivision: aDivUnit 	| checkInclusion |	checkInclusion := [ :smallBag :bigBag |		smallBag doWithOccurrences: [ :e :r |			r <= (bigBag occurrencesOf: e) ifFalse: [ ^ false ].		].	].		checkInclusion value: factores asBag value: (aDivUnit numerador asBag).	checkInclusion value: factores asBag value: (aDivUnit denominador asBag).		^ true.! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/18/2015 03:39'!printOn: aStream	| nombres aux|		nombres := OrderedCollection new.
   aux := factores asOrderedCollection.
   	Unidad renombres keysAndValuesDo: [ :key :value |		value = self ifTrue: [ 			nombres add: key. 			value factores do:[ :e | aux remove: e ifAbsent: [ ] ].		].	].	
	aux do: [ :unit | nombres add: (unit nombre) ].		nombres asStringOn: aStream delimiter: ' '.! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/18/2015 02:29'!dividiendoBasica: anUnidadBasica 	^ DivisionDeUnidades de: { anUnidadBasica } sobre: factores.! !!ProductoDeUnidades methodsFor: 'as yet unclassified' stamp: 'EmilianoMancuso 6/15/2015 00:41'!productoBasica: anUnidadBasica 	^ anUnidadBasica productoProducto: self.! !!ProductoDeUnidades methodsFor: 'constructor' stamp: 'EmilianoMancuso 6/18/2015 02:11'!init: aCollection 	factores := aCollection asArray.! !!ProductoDeUnidades methodsFor: 'attr_accessors' stamp: 'EmilianoMancuso 6/14/2015 21:20'!factores	^ factores! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ProductoDeUnidades class	instanceVariableNames: ''!!ProductoDeUnidades class methodsFor: 'constructor' stamp: 'EmilianoMancuso 6/18/2015 02:13'!de: factores 	factores ifEmpty: [ ^ Unidad escalar ]. 	(factores size = 1) ifTrue: [ ^ factores anyOne ].	^ self new init: factores! !